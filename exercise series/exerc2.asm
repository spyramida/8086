
PRINT MACRO CHAR
PUSH AX
PUSH DX
MOV DL,CHAR
MOV AH,2
INT 21H
POP DX
POP AX
ENDM

READ MACRO  
PUSH AX
MOV AH,8
INT 21H
POP AX
ENDM    

PRINT_STR MACRO STR
PUSH AX
PUSH DX
MOV DX,OFFSET STR
MOV AH,9
INT 21H 
POP DX
POP AX
ENDM  

READ_DEC MACRO
READZ:
    MOV AH,8
    INT 21H 
    CMP AL,'Q'
    JE QUIT ;TERMATISMOS GIA Q
    CMP AL,13 ;ENTER CHARACTER ASCII , ASCII OF ENTER, ASCII TOU ENTER
    JE NUMBER_ENTERED
    CMP AL, '0'
    JL READZ
    CMP AL, '9'
    JG READZ
   
    PRINT AL 
ENDM


STACK_SEG SEGMENT STACK
DB 30 DUP(?)
STACK_SEG ENDS 

DATA SEGMENT
MSG1 DB "GIVE NUMBERS:$"
SPACE DB " $"
MSG2 DB "ODD=$"
MSG3 DB "EVEN=$" 
MINUS DB "-$"
PLUS DB "+$"
EQUAL DB "="
NEWLINE DB 0AH, 0DH, "$"   
ERRORMSG DB "INPROPER INPUT, NO {0,F}$"
DATA ENDS  

CODE SEGMENT 
    ASSUME CS:CODE,SS:STACK_SEG,DS:DATA
    
MAIN PROC FAR
    MOV AX,DATA
    MOV DS, AX  
    
    
    
    START:  
    
    MOV DL,0    ;ARTIOI
    MOV DH,0    ;PERITTOI
    
          PRINT_STR MSG1
          MOV CX,6  ;DIAVASE WS 6 PSHFIA
    LOUPARE:           ;diavasma input
          READ_DEC           
          ;PROSOXH, EXOYME TOUS ASCII TWRA TWN INPUT
          ;EUTUXWS APO ASCII PINAKA ENAS ARI8MOS P.X. 1 EXEI ASCII 49 SE DEKADIKO OPOTE PERITTO
          ;OMOIWS OI ASCII ARTIWN ARTIOI ARA AMESWS XWRIS METATROPH APO ASCII SE DEKADIKO VGAINEI
        
          AND AL,00000001b  ;TAKE THE LAST BIT TO SEE IF IT IS ODD OR EVEN
          CMP AL,0
          JNE PERITTOS
          
          ARTIOS:
          ADD DL,1
          JMP NEXT
               
          PERITTOS:     
          ADD DH,1     
               
          NEXT:
                  
    LOOP LOUPARE 

  
NUMBER_ENTERED:

PRINT_STR NEWLINE
 PRINT_STR MSG2   
 ;NEED TO FIX DL AND DH FROM NUMBERS TO ASCII CODING
 ADD DH,48
 PRINT DH 
 PRINT SPACE
 PRINT_STR MSG3 
 ADD DL,48
 PRINT DL







;MAIN EDW SUMPLHRWSW-------------













PRINT_STR NEWLINE
    

    
    JMP START           ;SYNEXHS LEITOURGIA
    
     QUIT:              ;TERMATISMOS
            MOV AH,4CH
            INT 21H
          
        
MAIN ENDP

	PRINT_DEC PROC NEAR	 ;typwnei se dekadiko oti uparxei ston BL se bin
		MOV CX,0
		MOV AX,BX
	DA: MOV DX,0
		MOV BX,10
		DIV BX
		PUSH DX
		INC CX
		CMP AX,0
		JNZ DA
	DA2: POP DX
		ADD DX,30H
		PRINT DL
		LOOP DA2
		RET
	PRINT_DEC ENDP 
	
	
PRINT_HEX_DIGITS_FROM_AL PROC NEAR    ;PAIRNEI WS ORISMA TON 8-BIT REGISTER AL
    ;KAI TYPWNEI STHN O8ONH TA HEX PSIFIA TOY(1 'H 2). AN TO PRWTO EINAI MHDEN OPWS p.x.
    ;GIA AL=0000 1010=0Ahex TYPWNEI MONO TO A , ENW AN AL=1001 0101=95H TYPWNEI 95
    ;DEN EPHREAZEI KANENAN KATAXWRHTH!!!
    PUSH AX     
    
    ;MSB HEX PSIFIO
    PUSH AX  ;APO8HKEUSE ORIGINAL ARI8MO
    AND AL,11110000b
    CMP AL,0
    JE LSB_HEX_PSIFIO
    ;MH MHDENIKO TO MSB HEX PSIFIO, TO TYPWNOUME!
    ROR AL,4    ;SHIFT 4 8ESEIS DEKSIA XWRIS KRATOUMENO WSTE NA ER8EI STA MSB TO HEX PSIFIO
    CALL 4_BIT_HEX_TO_ASCII   ;ASCII CODING
    PRINT AL
    
    
    LSB_HEX_PSIFIO:
    POP AX  ;KSANAPARE TON ORIGINAL ARI8MO
    AND AL,00001111b
    CALL 4_BIT_HEX_TO_ASCII   ;ASCII CODING
    PRINT AL
    
 
    POP AX    
    RET
PRINT_HEX_DIGITS_FROM_AL ENDP 	                  
	                  
	
ASCII_TO_HEX_BIT PROC NEAR    ;PAIRNEI WS ORISMA ENAN ARI8MO HEX (0-F) APO TO PLHKTROLOGIO 
    ;POU EINAI STON AL APO8HKEUMENOS SE ASCII KAI EPISTREFEI STON AL TO HEX BIT POU DWSAME
 
    CMP AL,48
    JL ERROR    ;EISODOS EKTOS 0-F
    CMP AL,57
    JG A_TO_F
    
    ;0-9    48-57 DEC STON ASCII PINAKA
    SUB AL,48
    JMP JOB_DONE1
    
    A_TO_F:
    CMP AL,65
    JL ERROR    ;EISODOS EKTOS 0-F
    CMP AL,70
    JG ERROR    ;EISODOS EKTOS 0-F
    
    ;A-F    65-70 DEC STON ASCII PINAKA
    SUB AL,55
    JMP JOB_DONE1
    
    
    ERROR:
    PRINT_STR ERRORMSG 
    
    JOB_DONE1:
    ;APOTELESMA STON AL
    RET
ASCII_TO_HEX_BIT ENDP  


4_BIT_HEX_TO_ASCII PROC NEAR
    ;PAIRNEI WS ORISMA TON AL STH MORFH AL=0000 XXXX
    ;KAI EPISTREFEI TON ASCII TOU STON AL PALI
    ;(DOULEUEI GIA TOUS ASCII TWN 0-9 KAI A-F)
    
    CMP AL,9
    JG A_EWS_F
    
    ;0-9
    ADD AL,48
    JMP DONE
    
    A_EWS_F:
    ;A-F
    ADD AL,55
    
    DONE:
    RET
4_BIT_HEX_TO_ASCII ENDP
                         
                        
                         
                         
CODE ENDS
END MAIN